{"version":3,"sources":["themes/dark.js","themes/getTheme.js","themes/normal.js","themes/customThemeProvider.js","containers/helpers.js","containers/TimeTableContainer.js","containers/DateOfSlotToBook.js","containers/SlotDurationSelector.js","containers/AvailableFreeSlots.js","containers/ConfirmationSnackbar.js","containers/SubjectNameInputField.js","containers/BookDialogBox.js","containers/DateTimeComponent.js","containers/CancelDialogBox.js","containers/SlotChangingOptions.js","containers/UserContext.js","containers/HomePage.js","containers/Notifications.js","Routing.js","containers/NavBar.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","type","primary","main","light","dark","contrastText","secondary","titleBar","error","red","A400","themes","normal","deepPurple","deepOrange","CustomThemeContext","React","createContext","currentTheme","setTheme","CustomThemeProvider","props","children","localStorage","getItem","useState","themeName","_setThemeName","getTheme","contextValue","name","setItem","Provider","value","ThemeProvider","getDateOfNextFriday","maxDateInFuture","Date","setDate","getDate","getDay","disableWeekends","date","colorOfSubjectCell","Map","fetchTimeTable","setPeriodsSchedule","fetch","then","response","json","arr","i","length","j","has","set","randomColor","luminosity","hue","get","initializeColors","data","daysOfWeek","tableHeadings","tableHeadingStyles","backgroundColor","fontSize","TimeTableContainer","periodsSchedule","useEffect","currentDay","TableContainer","className","component","Paper","Table","stickyHeader","TableHead","TableRow","map","index","TableCell","align","style","TableBody","currentDayPeriods","period","colSpan","end","start","color","id","DateOfSlotToBook","utils","DateFnsUtils","overflow","elevation","variant","disablePast","selectedDate","onChange","handleDateChange","shouldDisableDate","maxDate","SlotDurationSelector","FormControl","FormLabel","RadioGroup","row","aria-label","defaultValue","handleRadioChange","FormControlLabel","control","Radio","label","labelPlacement","useStyles","makeStyles","root","display","justifyContent","float","flexWrap","margin","spacing","AvailableFreeSlots","classes","freeSlots","slot","Chip","slotSelected","clickable","onClick","handleSlotSelected","Alert","ConfirmationSnackbar","Snackbar","open","autoHideDuration","onClose","handleClose","severity","success","SubjectNameInputField","TextField","fullWidth","onBlur","handleInput","slots","BookDialogBox","setOpen","subjectName","setSubjectName","slotDurationWanted","setSlotDurationWanted","dateOfSlotWanted","setDateOfSlotWanted","setFreeSlots","setSlotSelected","snackbarOpen","setSnackbarOpen","bookingSuccessfull","setBookingSuccessfull","maxWidth","Button","Dialog","aria-labelledby","DialogTitle","DialogContent","event","target","startIcon","findSlots","method","headers","body","JSON","stringify","res","freeSlot","push","DialogActions","disableElevation","slotToBook","ok","DateTimeComponent","DateTimePicker","ampm","minutesStep","format","views","slotToCancel","handleDateTimeChange","KeyboardButtonProps","CancelDialogBox","setSlotToCancel","cancelSuccessfull","setCancelSuccessfull","handleCancelSlot","a","hour","getHours","changes","DialogContentText","SlotChangingOptions","UserContext","HomePage","profileInfo","useContext","admin","Notifications","notifs","setNotifs","console","log","List","notif","ListItem","button","alignItems","ListItemAvatar","Avatar","src","subject","ListItemText","cancelled","time","_id","Divider","slice","Routing","exact","path","drawerWidth","groups","_subGroup","_group","nested","paddingLeft","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","title","flexGrow","formControl","minWidth","toolbar","mixins","drawerPaper","content","padding","ResponsiveDrawer","isDark","Boolean","window","useTheme","mobileOpen","setMobileOpen","group","setGroup","subGroup","setSubGroup","handleDrawerToggle","ListItemIcon","Collapse","in","timeout","unMountOnExit","disablePadding","username","InputLabel","Select","labelId","MenuItem","Link","to","container","undefined","document","CssBaseline","AppBar","position","Toolbar","IconButton","edge","Typography","noWrap","Switch","checked","e","size","href","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","App","setProfileInfo","NavBar","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.728ec24a.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\nimport { red } from '@material-ui/core/colors'\n\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#26292C',\n      light: 'rgb(81, 91, 95)',\n      dark: 'rgb(26, 35, 39)',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      main: '#00e5ff',\n      light: 'rgb(255, 197, 112)',\n      dark: 'rgb(200, 147, 89)',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    titleBar: {\n      main: '#555555',\n      contrastText: '#ffffff',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n})\n\nexport default theme\n","import dark from './dark'\nimport normal from './normal'\n\nconst themes = {\n  normal,\n  dark,\n}\n\nexport default function getTheme(theme) {\n  return themes[theme]\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport { red, deepPurple, deepOrange } from '@material-ui/core/colors'\n\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: deepPurple,\n    secondary: deepOrange,\n    titleBar: {\n      main: '#555555',\n      contrastText: '#ffffff',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n})\n\nexport default theme\n","import React, { useState } from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport getTheme from './getTheme'\n\nexport const CustomThemeContext = React.createContext(\n  {\n    currentTheme: 'normal',\n    setTheme: null,\n  },\n)\n\nconst CustomThemeProvider = (props) => {\n  const { children } = props\n  const currentTheme = localStorage.getItem('appTheme') || 'normal'\n  const [themeName, _setThemeName] = useState(currentTheme)\n  const theme = getTheme(themeName)\n  \n  const setThemeName = (name) => {\n    localStorage.setItem('appTheme', name)\n    _setThemeName(name)\n  }\n\n  const contextValue = {\n    currentTheme: themeName,\n    setTheme: setThemeName,\n  }\n\n  return (\n    <CustomThemeContext.Provider value={contextValue}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CustomThemeContext.Provider>\n  )\n}\n\nexport default CustomThemeProvider\n","import randomColor from 'randomcolor';\n\nconst daysToNextFriday = () => {\n    return 5 - (new Date()).getDay() + 7;\n}\n\nexport function getDateOfNextFriday() {\n    let maxDateInFuture = new Date();\n    maxDateInFuture.setDate(maxDateInFuture.getDate() + daysToNextFriday());\n    return maxDateInFuture;\n}\n\nexport function disableWeekends(date) {\n    return date.getDay() === 0 || date.getDay() === 6;\n}\n\nconst generateRandomColorCode = () => {\n    return randomColor({\n        luminosity: \"light\",\n        hue: \"blue\"\n    });\n}\n\nconst colorOfSubjectCell = new Map();\n\nconst initializeColors = (arr) => {\n    for (let i = 0; i < arr.length; ++i) {\n        for (let j = 0; j < arr[i].length; ++j) {\n            if (!colorOfSubjectCell.has(arr[i][j].name)) {\n                colorOfSubjectCell.set(arr[i][j].name, generateRandomColorCode());\n            }\n            arr[i][j][\"color\"] = colorOfSubjectCell.get(arr[i][j].name);\n        }\n    }\n    return arr;\n}\n\n\nexport function fetchTimeTable(setPeriodsSchedule) {\n    fetch('/api/periodsSchedule')\n        .then((response) => {\n            return response.json();\n        })\n        .then((json) => {\n            return initializeColors(json);\n        })\n        .then((data) => {\n            setPeriodsSchedule(data);\n        });\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { fetchTimeTable } from './helpers';\n\nconst daysOfWeek = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday'\n];\n\nconst tableHeadings = [\n  \"Day/Time\",\n  \"8:00-9:00\",\n  \"9:00-10:00\",\n  \"10:00-11:00\",\n  \"11:00-12:00\",\n  \"12:00-13:00\",\n  \"13:00-14:00\",\n  \"14:00-15:00\",\n  \"15:00-16:00\",\n  \"16:00-17:00\"\n];\n\nconst tableHeadingStyles = {\n  backgroundColor: \"#f50057\",\n  fontSize: \"1.5em\"\n}\n\nconst tableBodyCellStyles = (color) => {\n  return {\n    backgroundColor: color,\n    fontSize: \"1.5em\"\n  }\n}\n\nexport default function TimeTableContainer({ periodsSchedule, setPeriodsSchedule }) {\n\n  React.useEffect(() => {\n    fetchTimeTable(setPeriodsSchedule);\n  }, []);\n\n  let currentDay = 0;\n  return (\n    <>\n      {periodsSchedule && <TableContainer className=\"time-table-container\" component={Paper}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {tableHeadings.map((value, index) => (\n                <TableCell\n                  key={index}\n                  align=\"center\"\n                  style={tableHeadingStyles}\n                  className=\"time-table-cell\">\n                  {value}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {periodsSchedule.map((currentDayPeriods, index) => (\n              <TableRow key={index}>\n                <TableCell\n                  align=\"center\"\n                  style={tableHeadingStyles}\n                  className=\"time-table-cell\">\n                  {daysOfWeek[currentDay++]}\n                </TableCell>\n\n                {currentDayPeriods.map(period => (\n                  <TableCell\n                    colSpan={period.end - period.start}\n                    key={period.id}\n                    align=\"center\" className=\"time-table-cell\"\n                    style={tableBodyCellStyles(period.color)}>\n                    {period.name}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>}\n    </>\n  )\n}\n","import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Paper } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider, Calendar } from '@material-ui/pickers';\nimport { getDateOfNextFriday, disableWeekends } from './helpers';\n\nexport default function DateOfSlotToBook(props) {\n\n  return (\n    <>\n      <div>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Paper style={{ overflow: \"hidden\" }} elevation={0} variant=\"outlined\">\n            <Calendar\n              disablePast\n              date={props.selectedDate}\n              onChange={props.handleDateChange}\n              shouldDisableDate={disableWeekends}\n              maxDate={getDateOfNextFriday()}\n            />\n          </Paper>\n        </MuiPickersUtilsProvider>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\n\nexport default function SlotDurationSelector(props) {\n    return (\n        <>\n            <form>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Choose slot duration</FormLabel>\n                    <RadioGroup row aria-label=\"Slot Duration\" name=\"slotDuration\" defaultValue=\"1\" onChange={props.handleRadioChange} >\n                        <FormControlLabel\n                            value=\"1\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"1 Hour\"\n                            labelPlacement=\"bottom\"\n                        />\n                        <FormControlLabel\n                            value=\"2\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"2 Hours\"\n                            labelPlacement=\"bottom\"\n                        />\n                        <FormControlLabel\n                            value=\"3\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"3 Hours\"\n                            labelPlacement=\"bottom\"\n                        />\n                    </RadioGroup>\n                </FormControl>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        float: 'left',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nexport default function AvailableFreeSlots(props) {\n  const classes = useStyles();\n    return (\n        <Paper className={classes.root} style={{ overflow: \"hidden\" }} elevation={0}>\n            {props.freeSlots.map((slot) => {\n                return (\n                    <Chip\n                      variant={(props.slotSelected === slot) ? \"default\" : \"outlined\"}\n                      clickable\n                      color=\"primary\"\n                      label={slot + \":00\"}\n                      onClick={() => props.handleSlotSelected(slot)}\n                      />\n                )\n            })}\n        </Paper>\n    )\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function ConfirmationSnackbar(props) {\n  const successMessage = \"Action completed successfully!\";\n  const errorMessage = \"Could not complete the action!\";\n  \n  return (\n    <div>\n      <Snackbar open={props.open} autoHideDuration={6000} onClose={props.handleClose}>\n        <Alert onClose={props.handleClose} severity={props.success ? \"success\" : \"error\"}>\n          {props.success ? successMessage : errorMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function SubjectNameInputField(props) {\n    return (\n        <div>\n            <TextField\n                margin=\"normal\"\n                label=\"Subject name\"\n                color=\"primary\"\n                fullWidth\n                onBlur={props.handleInput}\n            />\n        </div>\n    )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateOfSlotToBook from './DateOfSlotToBook';\nimport SlotDurationSelector from './SlotDurationSelector';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AvailableFreeSlots from './AvailableFreeSlots';\nimport ConfirmationSnackbar from './ConfirmationSnackbar';\nimport SubjectNameInputField from './SubjectNameInputField';\nimport { fetchTimeTable } from './helpers';\n\nlet slots = []; // temporary data, to be fetched from backend\n\nexport default function BookDialogBox({ periodsSchedule, setPeriodsSchedule }) {\n\n  const [open, setOpen] = React.useState(false);\n  const [subjectName, setSubjectName] = React.useState(\"\")\n  const [slotDurationWanted, setSlotDurationWanted] = React.useState(1);\n  const [dateOfSlotWanted, setDateOfSlotWanted] = React.useState(new Date());\n  const [freeSlots, setFreeSlots] = React.useState(null);\n  const [slotSelected, setSlotSelected] = React.useState(null);\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [bookingSuccessfull, setBookingSuccessfull] = React.useState(null);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubjectNameChange = (event) => {\n    setSubjectName(event.target.value);\n  }\n\n  const handleSlotDurationWanted = (event) => {\n    setSlotDurationWanted(event.target.value);\n  }\n\n  const findFreeSlots = () => {\n    const findSlots = {\n      slotDurationWanted, dateOfSlotWanted\n    }\n    fetch(\"/api/periodsSchedule/free\", {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(findSlots)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        slots = [];\n        data.map((freeSlot) => slots.push(freeSlot['start']));\n        setFreeSlots(slots);\n      });\n  }\n\n  const handleSlotSelected = (slot) => {\n    setSlotSelected(slot);\n  }\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleBookSlot = () => {\n    const slotToBook = {\n      subjectName,\n      dateOfSlotWanted,\n      slotSelected,\n      slotDurationWanted\n    }\n    // sent req to backend to book the selected slot.\n    fetch(\"/api/periodsSchedule/book\", {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(slotToBook)\n    })\n      .then(res => {\n        if (res.ok) {\n          setBookingSuccessfull(true);\n          fetchTimeTable(setPeriodsSchedule);\n        }\n        else {\n          setBookingSuccessfull(false);\n        }\n        setSnackbarOpen(true);\n      })\n  }\n\n  return (\n    <>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>Book a slot</Button>\n\n      <Dialog fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Book</DialogTitle>\n        <DialogContent>\n\n          <SubjectNameInputField handleInput={handleSubjectNameChange} />\n\n          <SlotDurationSelector handleRadioChange={handleSlotDurationWanted} />\n          <DateOfSlotToBook selectedDate={dateOfSlotWanted} handleDateChange={setDateOfSlotWanted} />\n\n          <Button\n            startIcon={<SearchIcon />}\n            fullWidth\n            onClick={findFreeSlots}\n          >\n            Search for free slots\n          </Button>\n\n          {freeSlots && <AvailableFreeSlots freeSlots={freeSlots} slotSelected={slotSelected} handleSlotSelected={handleSlotSelected} />}\n\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          {slotSelected && <Button variant=\"contained\" disableElevation onClick={handleBookSlot} color=\"primary\">\n            Confirm\n          </Button>}\n\n          <ConfirmationSnackbar open={snackbarOpen} handleClose={handleSnackbarClose} success={bookingSuccessfull}></ConfirmationSnackbar>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { getDateOfNextFriday, disableWeekends } from './helpers';\nimport {\n    MuiPickersUtilsProvider,\n    DateTimePicker,\n} from '@material-ui/pickers';\n\nexport default function DateTimeComponent(props) {\n    return (\n        <>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                    ampm={false}\n                    minutesStep={60}\n                    disablePast\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Pick slot\"\n                    format=\"dd/MM/yyyy HH:mm\"\n                    views={['date', 'hours']}\n                    value={props.slotToCancel}\n                    onChange={props.handleDateTimeChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                    shouldDisableDate={disableWeekends}\n                    maxDate={getDateOfNextFriday()}\n                />\n            </MuiPickersUtilsProvider>\n        </>\n    )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateTimeComponent from './DateTimeComponent';\nimport ConfirmationSnackbar from './ConfirmationSnackbar';\nimport { fetchTimeTable } from './helpers';\n\nexport default function CancelDialogBox({ periodsSchedule, setPeriodsSchedule }) {\n  const [open, setOpen] = React.useState(false);\n  const [slotToCancel, setSlotToCancel] = React.useState(new Date());\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [cancelSuccessfull, setCancelSuccessfull] = React.useState(null);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleCancelSlot = async () => {\n    //sent request to backend to cancel the slot selected.\n    const hour = slotToCancel.getHours();\n    const changes = { slotToCancel, hour };\n    fetch(\"/api/periodsSchedule/cancel\", {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(changes)\n    }).then(res => {\n      if(res.ok) {\n        setCancelSuccessfull(true);\n        fetchTimeTable(setPeriodsSchedule);\n      }\n      else setCancelSuccessfull(false);\n      setSnackbarOpen(true);\n    })\n  }\n\n  return (\n    <>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>Cancel a slot</Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Cancel</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Choose the date and time of the slot you want to cancel.\n          </DialogContentText>\n\n          <DateTimeComponent slotToCancel={slotToCancel} handleDateTimeChange={setSlotToCancel} />\n\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button variant=\"contained\" disableElevation onClick={() => handleCancelSlot()} color=\"primary\">\n            Confirm\n          </Button>\n\n          <ConfirmationSnackbar open={snackbarOpen} handleClose={handleSnackbarClose} success={cancelSuccessfull}></ConfirmationSnackbar>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport BookDialogBox from './BookDialogBox';\nimport CancelDialogBox from './CancelDialogBox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function SlotChangingOptions({ periodsSchedule, setPeriodsSchedule }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CancelDialogBox periodsSchedule={periodsSchedule} setPeriodsSchedule={setPeriodsSchedule} />\n      <BookDialogBox periodsSchedule={periodsSchedule} setPeriodsSchedule={setPeriodsSchedule} />\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport const UserContext = React.createContext(null);","// import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport TimeTableContainer from './TimeTableContainer';\nimport SlotChangingOptions from './SlotChangingOptions';\nimport { UserContext } from './UserContext';\n\nconst HomePage = () => {\n    const [periodsSchedule, setPeriodsSchedule] = React.useState(null);\n\n    const profileInfo = React.useContext(UserContext);\n\n    return (\n        <div>\n            {profileInfo && profileInfo.admin && <SlotChangingOptions periodsSchedule={periodsSchedule} setPeriodsSchedule={setPeriodsSchedule} />}\n            <TimeTableContainer periodsSchedule={periodsSchedule} setPeriodsSchedule={setPeriodsSchedule} />\n        </div>\n    );\n}\n\nexport default HomePage;","import { Avatar, Divider, List, ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Notifications = () => {\n  const [notifs, setNotifs] = useState(null);\n  useEffect(() => {\n    fetch(\"/api/Notifications\")\n      .then(res => {\n        console.log(typeof res);\n        return res.json();\n      })\n      .then(data => {\n        setNotifs(data);\n      })\n  }, [])\n  return (\n    <List className='notifications'>\n      {\n        notifs && notifs.map((notif) => ( //use stable keys instead of index\n          <>\n            <ListItem key={notif._id} button alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar src={'https://ui-avatars.com/api/?background=random&rounded=true&name=' + notif.subject} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={notif.subject}\n                secondary={\n                  (notif.cancelled) ?\n                    `The class on ${notif.date} at ${notif.time} hours is cancelled.` :\n                    `The class is scheduled for ${notif.date} at ${notif.time} hours.`\n                }\n              />\n            </ListItem>\n            <Divider key={notif._id.slice(0,5)} variant=\"inset\" />\n          </>\n        ))\n      }\n    </List>\n  );\n}\n\nexport default Notifications;\n","import { Route, Switch } from 'react-router-dom';\nimport HomePage from './containers/HomePage';\nimport Notifications from './containers/Notifications';\n\n\nconst Routing = () => {\n    return (\n            <Switch>\n                <Route exact path='/' component={HomePage} />\n                <Route exact path='/Notifications' component={Notifications} />\n            </Switch>\n    );\n}\n\nexport default Routing;\n","import React, { useContext } from 'react';\n\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport GroupIcon from '@material-ui/icons/Group';\nimport MessageIcon from '@material-ui/icons/Message';\n// import HomeIcon from '@material-ui/icons/Home';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ClassIcon from '@material-ui/icons/Class';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SwitchUI from '@material-ui/core/Switch'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport { CustomThemeContext } from '../themes/customThemeProvider';\nimport Routing from '../Routing';\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { UserContext } from './UserContext';\n\nconst drawerWidth = 240;\nconst groups = {\n  _subGroup: localStorage.getItem('subGroup') || 'E2',\n  _group: localStorage.getItem('group') || 'G1'\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n\n  },\n  title: {\n    flexGrow: 1,\n  },\n  formControl: {\n    minWidth: 110\n  },\n\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { currentTheme, setTheme } = useContext(CustomThemeContext)\n  const isDark = Boolean(currentTheme === 'dark')\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [open, setOpen] = React.useState(true);\n  const [group, setGroup] = React.useState(groups._group);\n  const [subGroup, setSubGroup] = React.useState(groups._subGroup);\n\n  const profileInfo = React.useContext(UserContext);\n\n  const handleThemeChange = (e) => {\n    let { checked } = e.target\n    if (checked) {\n      setTheme('dark')\n    }\n    else {\n      setTheme('normal')\n    }\n  }\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleClick = () => {\n    setOpen(!open);\n  }\n\n  const handleChangeGroup = (event) => {\n    localStorage.setItem('group', event.target.value);\n    setGroup(event.target.value);\n  }\n\n  const handleChangeSubGroup = (event) => {\n    localStorage.setItem('subGroup', event.target.value);\n    setSubGroup(event.target.value);\n\n  }\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <List> {/*Can also use Home icon instead of table icon */}\n        <Divider />\n\n        {profileInfo && <>\n          <ListItem button onClick={handleClick}>\n            <ListItemIcon ><PersonIcon /></ListItemIcon>\n            <ListItemText primary={'Profile Info'} />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unMountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem button className={classes.nested}>\n                <ListItemIcon>\n                  <PersonOutlineIcon />\n                </ListItemIcon>\n                <ListItemText primary={profileInfo.username} />\n              </ListItem>\n              <ListItem button className={classes.nested}>\n                <ListItemIcon>\n                  <ClassIcon />\n                </ListItemIcon>\n                <FormControl className={classes.formControl}>\n                  <InputLabel id='Group-label'>Group</InputLabel>\n                  <Select\n                    labelId='Group-label'\n                    id='Group'\n                    value={group}\n                    onChange={handleChangeGroup}\n                    label=\"Group\"\n                  >\n                    <MenuItem value={'G1'}>G1</MenuItem>\n                    <MenuItem value={'G2'}>G2</MenuItem>\n                  </Select>\n                </FormControl>\n              </ListItem>\n              <ListItem button className={classes.nested}>\n                <ListItemIcon>\n                  <GroupIcon />\n                </ListItemIcon>\n                <FormControl className={classes.formControl}>\n                  <InputLabel id='subGroup-label'>Sub-Group</InputLabel>\n                  <Select\n                    labelId='subGroup-label'\n                    id='subGroup'\n                    value={subGroup}\n                    onChange={handleChangeSubGroup}\n                    label=\"Sub-Group\"\n                  >\n                    <MenuItem value={'E1'}>E1</MenuItem>\n                    <MenuItem value={'E2'}>E2</MenuItem>\n                    <MenuItem value={'E3'}>E3</MenuItem>\n                    <MenuItem value={'E4'}>E4</MenuItem>\n                    <MenuItem value={'E5'}>E5</MenuItem>\n                    <MenuItem value={'E6'}>E6</MenuItem>\n\n                  </Select>\n                </FormControl>\n              </ListItem>\n            </List>\n          </Collapse>\n        </>}\n        <ListItem button component={Link} to='/' key={'Time-Table'}>\n          <ListItemIcon><TableChartIcon /></ListItemIcon>\n          <ListItemText primary={'Time-Table'} />\n        </ListItem>\n\n        <ListItem button component={Link} to='/Notifications' key={'Notifications'}>\n          <ListItemIcon><MessageIcon /></ListItemIcon>\n          <ListItemText primary={'Notifications'} />\n        </ListItem>\n\n        <Divider />\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Class Manager\n          </Typography>\n          <FormControlLabel\n            control={<SwitchUI color='secondary' checked={isDark} onChange={handleThemeChange} />}\n            label={<InvertColorsIcon />}\n          />\n          {!profileInfo && <Button variant='outlined' size='large' href=\"/api/auth/google\">Login</Button>}\n          {profileInfo && <Button variant='outlined' size='large' href=\"/api/auth/logout\">Logout</Button>}\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Routing />\n      </main>\n    </div>\n  );\n}\n\n\n\nexport default ResponsiveDrawer;\n","import './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport NavBar from './containers/NavBar';\nimport React from 'react';\nimport { UserContext } from './containers/UserContext';\n\nfunction App() {\n\n  const [profileInfo, setProfileInfo] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch('/api/profile')\n      .then(data => {\n        return data.json();\n      })\n      .then(json => {\n        setProfileInfo(json);\n      });\n  }, []);\n\n  return (\n\n    <UserContext.Provider value={profileInfo}>\n      <Router>\n        <div className=\"App\">\n          <NavBar className=\"nav-bar\" />\n        </div>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CustomThemeProvider from './themes/customThemeProvider';\n\nReactDOM.render(\n  <CustomThemeProvider>\n    <App />\n  </CustomThemeProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}